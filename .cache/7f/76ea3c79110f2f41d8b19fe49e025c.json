{"id":"RBlE","dependencies":[{"name":"/Users/etienne/skyenv/package.json","includedInParent":true,"mtime":1596478551490},{"name":"/Users/etienne/skyenv/node_modules/bson/package.json","includedInParent":true,"mtime":1596467161400}],"generated":{"js":"var t=function(e){if(!(this instanceof t))return new t(e);this._bsontype=\"Int32\",this.value=e};t.prototype.valueOf=function(){return this.value},t.prototype.toJSON=function(){return this.value},module.exports=t,module.exports.Int32=t;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/bson/lib/bson/int_32.js","original":{"line":8,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/bson/lib/bson/int_32.js","name":"Int32","original":{"line":8,"column":4},"generated":{"line":1,"column":4}},{"source":"../node_modules/bson/lib/bson/int_32.js","original":{"line":8,"column":12},"generated":{"line":1,"column":6}},{"source":"../node_modules/bson/lib/bson/int_32.js","name":"value","original":{"line":8,"column":21},"generated":{"line":1,"column":15}},{"source":"../node_modules/bson/lib/bson/int_32.js","original":{"line":9,"column":6},"generated":{"line":1,"column":18}},{"source":"../node_modules/bson/lib/bson/int_32.js","original":{"line":9,"column":8},"generated":{"line":1,"column":23}},{"source":"../node_modules/bson/lib/bson/int_32.js","name":"Int32","original":{"line":9,"column":24},"generated":{"line":1,"column":39}},{"source":"../node_modules/bson/lib/bson/int_32.js","original":{"line":9,"column":32},"generated":{"line":1,"column":42}},{"source":"../node_modules/bson/lib/bson/int_32.js","original":{"line":9,"column":39},"generated":{"line":1,"column":49}},{"source":"../node_modules/bson/lib/bson/int_32.js","name":"Int32","original":{"line":9,"column":43},"generated":{"line":1,"column":53}},{"source":"../node_modules/bson/lib/bson/int_32.js","name":"value","original":{"line":9,"column":49},"generated":{"line":1,"column":55}},{"source":"../node_modules/bson/lib/bson/int_32.js","name":"_bsontype","original":{"line":11,"column":7},"generated":{"line":1,"column":58}},{"source":"../node_modules/bson/lib/bson/int_32.js","name":"_bsontype","original":{"line":11,"column":7},"generated":{"line":1,"column":63}},{"source":"../node_modules/bson/lib/bson/int_32.js","original":{"line":11,"column":19},"generated":{"line":1,"column":73}},{"source":"../node_modules/bson/lib/bson/int_32.js","name":"value","original":{"line":12,"column":7},"generated":{"line":1,"column":81}},{"source":"../node_modules/bson/lib/bson/int_32.js","name":"value","original":{"line":12,"column":7},"generated":{"line":1,"column":86}},{"source":"../node_modules/bson/lib/bson/int_32.js","name":"value","original":{"line":12,"column":15},"generated":{"line":1,"column":92}},{"source":"../node_modules/bson/lib/bson/int_32.js","name":"Int32","original":{"line":21,"column":0},"generated":{"line":1,"column":95}},{"source":"../node_modules/bson/lib/bson/int_32.js","name":"prototype","original":{"line":21,"column":6},"generated":{"line":1,"column":97}},{"source":"../node_modules/bson/lib/bson/int_32.js","name":"valueOf","original":{"line":21,"column":16},"generated":{"line":1,"column":107}},{"source":"../node_modules/bson/lib/bson/int_32.js","original":{"line":21,"column":26},"generated":{"line":1,"column":115}},{"source":"../node_modules/bson/lib/bson/int_32.js","original":{"line":22,"column":9},"generated":{"line":1,"column":126}},{"source":"../node_modules/bson/lib/bson/int_32.js","original":{"line":22,"column":9},"generated":{"line":1,"column":133}},{"source":"../node_modules/bson/lib/bson/int_32.js","name":"value","original":{"line":22,"column":14},"generated":{"line":1,"column":138}},{"source":"../node_modules/bson/lib/bson/int_32.js","name":"Int32","original":{"line":28,"column":0},"generated":{"line":1,"column":145}},{"source":"../node_modules/bson/lib/bson/int_32.js","name":"prototype","original":{"line":28,"column":6},"generated":{"line":1,"column":147}},{"source":"../node_modules/bson/lib/bson/int_32.js","name":"toJSON","original":{"line":28,"column":16},"generated":{"line":1,"column":157}},{"source":"../node_modules/bson/lib/bson/int_32.js","original":{"line":28,"column":25},"generated":{"line":1,"column":164}},{"source":"../node_modules/bson/lib/bson/int_32.js","original":{"line":29,"column":9},"generated":{"line":1,"column":175}},{"source":"../node_modules/bson/lib/bson/int_32.js","original":{"line":29,"column":9},"generated":{"line":1,"column":182}},{"source":"../node_modules/bson/lib/bson/int_32.js","name":"value","original":{"line":29,"column":14},"generated":{"line":1,"column":187}},{"source":"../node_modules/bson/lib/bson/int_32.js","name":"module","original":{"line":32,"column":0},"generated":{"line":1,"column":194}},{"source":"../node_modules/bson/lib/bson/int_32.js","name":"exports","original":{"line":32,"column":7},"generated":{"line":1,"column":201}},{"source":"../node_modules/bson/lib/bson/int_32.js","name":"Int32","original":{"line":32,"column":17},"generated":{"line":1,"column":209}},{"source":"../node_modules/bson/lib/bson/int_32.js","name":"module","original":{"line":33,"column":0},"generated":{"line":1,"column":211}},{"source":"../node_modules/bson/lib/bson/int_32.js","name":"exports","original":{"line":33,"column":7},"generated":{"line":1,"column":218}},{"source":"../node_modules/bson/lib/bson/int_32.js","name":"Int32","original":{"line":33,"column":15},"generated":{"line":1,"column":226}},{"source":"../node_modules/bson/lib/bson/int_32.js","name":"Int32","original":{"line":33,"column":23},"generated":{"line":1,"column":232}}],"sources":{"../node_modules/bson/lib/bson/int_32.js":"/**\n * A class representation of a BSON Int32 type.\n *\n * @class\n * @param {number} value the number we want to represent as an int32.\n * @return {Int32}\n */\nvar Int32 = function(value) {\n  if (!(this instanceof Int32)) return new Int32(value);\n\n  this._bsontype = 'Int32';\n  this.value = value;\n};\n\n/**\n * Access the number value.\n *\n * @method\n * @return {number} returns the wrapped int32 number.\n */\nInt32.prototype.valueOf = function() {\n  return this.value;\n};\n\n/**\n * @ignore\n */\nInt32.prototype.toJSON = function() {\n  return this.value;\n};\n\nmodule.exports = Int32;\nmodule.exports.Int32 = Int32;\n"},"lineCount":null}},"error":null,"hash":"313f58fde606f9f0aa32a8230ed47bea","cacheData":{"env":{}}}