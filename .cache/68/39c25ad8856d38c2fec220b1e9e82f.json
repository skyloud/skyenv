{"id":"C9oy","dependencies":[{"name":"/Users/etienne/skyenv/package.json","includedInParent":true,"mtime":1596478551490},{"name":"/Users/etienne/skyenv/node_modules/bson/package.json","includedInParent":true,"mtime":1596467161400}],"generated":{"js":"function t(o,s){if(!(this instanceof t))return new t;this._bsontype=\"BSONRegExp\",this.pattern=o||\"\",this.options=s||\"\";for(var i=0;i<this.options.length;i++)if(\"i\"!==this.options[i]&&\"m\"!==this.options[i]&&\"x\"!==this.options[i]&&\"l\"!==this.options[i]&&\"s\"!==this.options[i]&&\"u\"!==this.options[i])throw new Error(\"the regular expression options [\"+this.options[i]+\"] is not supported\")}module.exports=t,module.exports.BSONRegExp=t;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/bson/lib/bson/regexp.js","original":{"line":7,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/bson/lib/bson/regexp.js","name":"BSONRegExp","original":{"line":7,"column":9},"generated":{"line":1,"column":9}},{"source":"../node_modules/bson/lib/bson/regexp.js","name":"pattern","original":{"line":7,"column":20},"generated":{"line":1,"column":11}},{"source":"../node_modules/bson/lib/bson/regexp.js","name":"options","original":{"line":7,"column":29},"generated":{"line":1,"column":13}},{"source":"../node_modules/bson/lib/bson/regexp.js","original":{"line":8,"column":6},"generated":{"line":1,"column":16}},{"source":"../node_modules/bson/lib/bson/regexp.js","original":{"line":8,"column":8},"generated":{"line":1,"column":21}},{"source":"../node_modules/bson/lib/bson/regexp.js","name":"BSONRegExp","original":{"line":8,"column":24},"generated":{"line":1,"column":37}},{"source":"../node_modules/bson/lib/bson/regexp.js","original":{"line":8,"column":37},"generated":{"line":1,"column":40}},{"source":"../node_modules/bson/lib/bson/regexp.js","original":{"line":8,"column":44},"generated":{"line":1,"column":47}},{"source":"../node_modules/bson/lib/bson/regexp.js","name":"BSONRegExp","original":{"line":8,"column":48},"generated":{"line":1,"column":51}},{"source":"../node_modules/bson/lib/bson/regexp.js","name":"_bsontype","original":{"line":11,"column":7},"generated":{"line":1,"column":53}},{"source":"../node_modules/bson/lib/bson/regexp.js","name":"_bsontype","original":{"line":11,"column":7},"generated":{"line":1,"column":58}},{"source":"../node_modules/bson/lib/bson/regexp.js","original":{"line":11,"column":19},"generated":{"line":1,"column":68}},{"source":"../node_modules/bson/lib/bson/regexp.js","name":"pattern","original":{"line":12,"column":7},"generated":{"line":1,"column":81}},{"source":"../node_modules/bson/lib/bson/regexp.js","name":"pattern","original":{"line":12,"column":7},"generated":{"line":1,"column":86}},{"source":"../node_modules/bson/lib/bson/regexp.js","name":"pattern","original":{"line":12,"column":17},"generated":{"line":1,"column":94}},{"source":"../node_modules/bson/lib/bson/regexp.js","original":{"line":12,"column":28},"generated":{"line":1,"column":97}},{"source":"../node_modules/bson/lib/bson/regexp.js","name":"options","original":{"line":13,"column":7},"generated":{"line":1,"column":100}},{"source":"../node_modules/bson/lib/bson/regexp.js","name":"options","original":{"line":13,"column":7},"generated":{"line":1,"column":105}},{"source":"../node_modules/bson/lib/bson/regexp.js","name":"options","original":{"line":13,"column":17},"generated":{"line":1,"column":113}},{"source":"../node_modules/bson/lib/bson/regexp.js","original":{"line":13,"column":28},"generated":{"line":1,"column":116}},{"source":"../node_modules/bson/lib/bson/regexp.js","original":{"line":16,"column":7},"generated":{"line":1,"column":119}},{"source":"../node_modules/bson/lib/bson/regexp.js","original":{"line":16,"column":7},"generated":{"line":1,"column":123}},{"source":"../node_modules/bson/lib/bson/regexp.js","name":"i","original":{"line":16,"column":11},"generated":{"line":1,"column":127}},{"source":"../node_modules/bson/lib/bson/regexp.js","original":{"line":16,"column":15},"generated":{"line":1,"column":129}},{"source":"../node_modules/bson/lib/bson/regexp.js","name":"i","original":{"line":16,"column":18},"generated":{"line":1,"column":131}},{"source":"../node_modules/bson/lib/bson/regexp.js","original":{"line":16,"column":22},"generated":{"line":1,"column":133}},{"source":"../node_modules/bson/lib/bson/regexp.js","name":"options","original":{"line":16,"column":27},"generated":{"line":1,"column":138}},{"source":"../node_modules/bson/lib/bson/regexp.js","name":"length","original":{"line":16,"column":35},"generated":{"line":1,"column":146}},{"source":"../node_modules/bson/lib/bson/regexp.js","name":"i","original":{"line":16,"column":43},"generated":{"line":1,"column":153}},{"source":"../node_modules/bson/lib/bson/regexp.js","original":{"line":18,"column":6},"generated":{"line":1,"column":157}},{"source":"../node_modules/bson/lib/bson/regexp.js","original":{"line":19,"column":28},"generated":{"line":1,"column":160}},{"source":"../node_modules/bson/lib/bson/regexp.js","original":{"line":19,"column":8},"generated":{"line":1,"column":166}},{"source":"../node_modules/bson/lib/bson/regexp.js","name":"options","original":{"line":19,"column":13},"generated":{"line":1,"column":171}},{"source":"../node_modules/bson/lib/bson/regexp.js","name":"i","original":{"line":19,"column":21},"generated":{"line":1,"column":179}},{"source":"../node_modules/bson/lib/bson/regexp.js","original":{"line":20,"column":28},"generated":{"line":1,"column":183}},{"source":"../node_modules/bson/lib/bson/regexp.js","original":{"line":20,"column":8},"generated":{"line":1,"column":189}},{"source":"../node_modules/bson/lib/bson/regexp.js","name":"options","original":{"line":20,"column":13},"generated":{"line":1,"column":194}},{"source":"../node_modules/bson/lib/bson/regexp.js","name":"i","original":{"line":20,"column":21},"generated":{"line":1,"column":202}},{"source":"../node_modules/bson/lib/bson/regexp.js","original":{"line":21,"column":28},"generated":{"line":1,"column":206}},{"source":"../node_modules/bson/lib/bson/regexp.js","original":{"line":21,"column":8},"generated":{"line":1,"column":212}},{"source":"../node_modules/bson/lib/bson/regexp.js","name":"options","original":{"line":21,"column":13},"generated":{"line":1,"column":217}},{"source":"../node_modules/bson/lib/bson/regexp.js","name":"i","original":{"line":21,"column":21},"generated":{"line":1,"column":225}},{"source":"../node_modules/bson/lib/bson/regexp.js","original":{"line":22,"column":28},"generated":{"line":1,"column":229}},{"source":"../node_modules/bson/lib/bson/regexp.js","original":{"line":22,"column":8},"generated":{"line":1,"column":235}},{"source":"../node_modules/bson/lib/bson/regexp.js","name":"options","original":{"line":22,"column":13},"generated":{"line":1,"column":240}},{"source":"../node_modules/bson/lib/bson/regexp.js","name":"i","original":{"line":22,"column":21},"generated":{"line":1,"column":248}},{"source":"../node_modules/bson/lib/bson/regexp.js","original":{"line":23,"column":28},"generated":{"line":1,"column":252}},{"source":"../node_modules/bson/lib/bson/regexp.js","original":{"line":23,"column":8},"generated":{"line":1,"column":258}},{"source":"../node_modules/bson/lib/bson/regexp.js","name":"options","original":{"line":23,"column":13},"generated":{"line":1,"column":263}},{"source":"../node_modules/bson/lib/bson/regexp.js","name":"i","original":{"line":23,"column":21},"generated":{"line":1,"column":271}},{"source":"../node_modules/bson/lib/bson/regexp.js","original":{"line":24,"column":28},"generated":{"line":1,"column":275}},{"source":"../node_modules/bson/lib/bson/regexp.js","original":{"line":24,"column":8},"generated":{"line":1,"column":281}},{"source":"../node_modules/bson/lib/bson/regexp.js","name":"options","original":{"line":24,"column":13},"generated":{"line":1,"column":286}},{"source":"../node_modules/bson/lib/bson/regexp.js","name":"i","original":{"line":24,"column":21},"generated":{"line":1,"column":294}},{"source":"../node_modules/bson/lib/bson/regexp.js","original":{"line":27,"column":12},"generated":{"line":1,"column":297}},{"source":"../node_modules/bson/lib/bson/regexp.js","original":{"line":27,"column":12},"generated":{"line":1,"column":303}},{"source":"../node_modules/bson/lib/bson/regexp.js","name":"Error","original":{"line":27,"column":16},"generated":{"line":1,"column":307}},{"source":"../node_modules/bson/lib/bson/regexp.js","original":{"line":27,"column":22},"generated":{"line":1,"column":313}},{"source":"../node_modules/bson/lib/bson/regexp.js","original":{"line":27,"column":59},"generated":{"line":1,"column":348}},{"source":"../node_modules/bson/lib/bson/regexp.js","name":"options","original":{"line":27,"column":64},"generated":{"line":1,"column":353}},{"source":"../node_modules/bson/lib/bson/regexp.js","name":"i","original":{"line":27,"column":72},"generated":{"line":1,"column":361}},{"source":"../node_modules/bson/lib/bson/regexp.js","original":{"line":27,"column":77},"generated":{"line":1,"column":364}},{"source":"../node_modules/bson/lib/bson/regexp.js","name":"module","original":{"line":32,"column":0},"generated":{"line":1,"column":386}},{"source":"../node_modules/bson/lib/bson/regexp.js","name":"exports","original":{"line":32,"column":7},"generated":{"line":1,"column":393}},{"source":"../node_modules/bson/lib/bson/regexp.js","name":"BSONRegExp","original":{"line":32,"column":17},"generated":{"line":1,"column":401}},{"source":"../node_modules/bson/lib/bson/regexp.js","name":"module","original":{"line":33,"column":0},"generated":{"line":1,"column":403}},{"source":"../node_modules/bson/lib/bson/regexp.js","name":"exports","original":{"line":33,"column":7},"generated":{"line":1,"column":410}},{"source":"../node_modules/bson/lib/bson/regexp.js","name":"BSONRegExp","original":{"line":33,"column":15},"generated":{"line":1,"column":418}},{"source":"../node_modules/bson/lib/bson/regexp.js","name":"BSONRegExp","original":{"line":33,"column":28},"generated":{"line":1,"column":429}}],"sources":{"../node_modules/bson/lib/bson/regexp.js":"/**\n * A class representation of the BSON RegExp type.\n *\n * @class\n * @return {BSONRegExp} A MinKey instance\n */\nfunction BSONRegExp(pattern, options) {\n  if (!(this instanceof BSONRegExp)) return new BSONRegExp();\n\n  // Execute\n  this._bsontype = 'BSONRegExp';\n  this.pattern = pattern || '';\n  this.options = options || '';\n\n  // Validate options\n  for (var i = 0; i < this.options.length; i++) {\n    if (\n      !(\n        this.options[i] === 'i' ||\n        this.options[i] === 'm' ||\n        this.options[i] === 'x' ||\n        this.options[i] === 'l' ||\n        this.options[i] === 's' ||\n        this.options[i] === 'u'\n      )\n    ) {\n      throw new Error('the regular expression options [' + this.options[i] + '] is not supported');\n    }\n  }\n}\n\nmodule.exports = BSONRegExp;\nmodule.exports.BSONRegExp = BSONRegExp;\n"},"lineCount":null}},"error":null,"hash":"4911262d2d2b1e9ec3a46e9d093ff9db","cacheData":{"env":{}}}